name: Build and push latest image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
env:
  TERM: xterm-color
  REGISTRY: quay.io
jobs:
  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        env:
          SHELLCHECK_OPTS: -e SC2068
        with:
          scandir: './scripts'
          severity: error
  
  yamllint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: yaml-lint
        uses: ibiqlik/action-yamllint@v3
        with:
          config_data: |
            extends: default
            rules:
              line-length:
                level: warning
              trailing-spaces:
                level: warning
              brackets:
                level: warning
              empty-lines:
                level: warning

  
  build-exe:
    name: Build and push image
    runs-on: ubuntu-20.04
    env:
      SHELL: /bin/bash
      KUBECONFIG: '/home/runner/.kube/config'

    steps:
      - name: Set up Go 1.19.4
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.4

      - name: Disable default go problem matcher
        run: echo "::remove-matcher owner=go::"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          ref: ${{ github.sha }}

      - name: Authenticate against Quay.io
        if: ${{ github.ref == 'refs/heads/main' && github.repository_owner == 'test-network-function' }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          # Use a Robot Account to authenticate against Quay.io
          # https://docs.quay.io/glossary/robot-accounts.html
          username: ${{ secrets.QUAY_ROBOT_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: Build and push image
        if: ${{ github.ref == 'refs/heads/main' && github.repository_owner == 'test-network-function' }}
        run: ./scripts/image.sh
